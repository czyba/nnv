This editor is not meant to be used actively. It is just a small project to get more familiar with:

 1.) C
 2.) Model-View-Controller concept (and how difficult it is to implement in C)
 3.) I/O
 4.) escape sequences

Currently implemented features

  1.) Printing ASCII-Characters and newlines
  2.) Keys with their usual interpretation:
    - Printable ASCII Input Keys
    - Return
    - Backspace
    - Del
    - Home
    - End
    - Page up
    - Page down
    - Arrow keys
  3.) Features:
    - Opening Multiple Textfiles
    - Multitab support
    - Line numbering
    - Goto Line:Column support (Accept with Enter, close with ESC)
  4.) Hotkeys
    - Save: CTRL + s
    - Next Tab: CTRL + n, CTRL + TAB is just TAB
    - Previous Tab: CTRL + p
    - Quit without saving: CTRL + q
    - Close Tab: CTRL + w
    - Toggle Line Numbering On/Off: CTRL + l
    - Open goto line editor: CTRL + g

Features I wish to implement at some point in no particular order:

  1.) File Tree View (Similar to Sublime/Atom)
    - Expandable / Collapsable directories
    - Moving with arrow keys
    - File search via input
    - Fuzzy Search for Files
  2.) Search Dialog (Similar to Sublime/Atom)
    - Word Search
    - Regexp Search
    - Word Replace
    - Regexp Replacment (Simlilar to how Eclipse handles it)
  3.) Editor
    - Copy & Paste Support (Elementary feature actually...)
    - Multicursor support (This one is probably one of the more difficult features)
    - Syntax Highlighting
    - Non-Ascii Input
    - Spell Checking
    - Word suggestion (Another feature that is probably somewhat difficult to add)
    - Clean / Dirty detection
    - Operating on files while other programs may operate on them as well
  4.) Hotkey help view
  5.) Resize window support

Improvements I wish to implement at some point. Also in no particular order:
  - Improve file handling. Currently no permission, write or open checks are done. Opening a file without permissions will most likely crash or result in undefined behaviour.
  - Improve file caching. Currently the whole file is loaded and kept in memory.
  - Improve callback mechanism by adding an additional (void*) parameter. This can be used to speed up redrawing in the editor.
  - Improve Tab handling. I don't like how the current algorithm behaves when closing files.
  - Improve redrawing in the editor. Currently if the window is too small, the content will not fit into the buffer, resulting in a skewed editor.
